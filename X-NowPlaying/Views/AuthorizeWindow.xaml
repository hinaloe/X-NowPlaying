<Window x:Class="NowPlaying.XApplication.Views.AuthorizeWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
        xmlns:v="clr-namespace:NowPlaying.XApplication.Views"
        xmlns:vm="clr-namespace:NowPlaying.XApplication.ViewModels"
        Title="AuthorizeWindow"
        Width="400"
        Height="190"
        WindowStartupLocation="CenterOwner"
        WindowStyle="ToolWindow">

    <i:Interaction.Triggers>
        <l:InteractionMessageTrigger MessageKey="WindowAction" Messenger="{Binding Messenger, Mode=OneWay}">
            <l:WindowInteractionMessageAction />
        </l:InteractionMessageTrigger>
        <!--  Viewに特別な要件が存在しない限りは、トリガーやアクションの自作にこだわらず積極的にコードビハインドを使いましょう  -->
        <!--  Viewのコードビハインドは、基本的にView内で完結するロジックとViewModelからのイベントの受信(専用リスナを使用する)に限るとトラブルが少なくなります  -->
        <!--  Livet1.1からはコードビハインドでViewModelのイベントを受信するためのWeakEventLisnterサポートが追加されています  -->

        <!--  WindowのContentRenderedイベントのタイミングでViewModelのInitializeメソッドが呼ばれます  -->
        <i:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodName="Initialize" MethodTarget="{Binding}" />
        </i:EventTrigger>

        <!--  Windowが閉じたタイミングでViewModelのDisposeメソッドが呼ばれます  -->
        <i:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction />
        </i:EventTrigger>

        <!--  WindowのCloseキャンセル処理に対応する場合は、WindowCloseCancelBehaviorの使用を検討してください  -->

    </i:Interaction.Triggers>

    <Grid>
        <TextBlock Margin="5,5,0,0"
                   FontSize="20"
                   Text="Authorization" />
        <TextBlock Margin="15,35"
                   FontSize="15"
                   Text="表示されたページにてアクセスを認証し、PINコードを入力してください。"
                   TextWrapping="WrapWithOverflow" />
        <Line Stroke="Black"
              StrokeThickness="0.10"
              X1="10"
              X2="530"
              Y1="80"
              Y2="80" />
        <TextBlock Margin="30,90,0,0"
                   FontSize="14"
                   Text="PINコード" />
        <TextBox Width="220"
                 Height="22"
                 Margin="120,89,0,0"
                 HorizontalAlignment="Left"
                 VerticalAlignment="Top"
                 FontSize="13"
                 Text="{Binding PinCode,
                                Mode=TwoWay,
                                UpdateSourceTrigger=PropertyChanged}" />

        <Button Width="80"
                Height="25"
                Margin="0,0,10,10"
                HorizontalAlignment="Right"
                VerticalAlignment="Bottom"
                Command="{Binding AuthCommand}"
                Content="認証"
                IsEnabled="{Binding IsEnabledAuthButton}" />
    </Grid>
</Window>
