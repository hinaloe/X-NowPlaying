<Window x:Class="X_NowPlaying.Views.AuthorizeWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
        xmlns:v="clr-namespace:X_NowPlaying.Views"
        xmlns:vm="clr-namespace:X_NowPlaying.ViewModels"
        Title="AuthorizeWindow" Height="190" Width="400"
        WindowStyle="ToolWindow"
        WindowStartupLocation="CenterOwner">
    
     <i:Interaction.Triggers>
        <l:InteractionMessageTrigger MessageKey="WindowAction" 
			Messenger="{Binding Messenger, Mode=OneWay}">
            <l:WindowInteractionMessageAction/>
        </l:InteractionMessageTrigger>
        <!--Viewに特別な要件が存在しない限りは、トリガーやアクションの自作にこだわらず積極的にコードビハインドを使いましょう -->
    	<!--Viewのコードビハインドは、基本的にView内で完結するロジックとViewModelからのイベントの受信(専用リスナを使用する)に限るとトラブルが少なくなります -->
    	<!--Livet1.1からはコードビハインドでViewModelのイベントを受信するためのWeakEventLisnterサポートが追加されています --> 
        
        <!--WindowのContentRenderedイベントのタイミングでViewModelのInitializeメソッドが呼ばれます-->
        <i:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Initialize"/>
        </i:EventTrigger>

        <!--Windowが閉じたタイミングでViewModelのDisposeメソッドが呼ばれます-->
        <i:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction/>
        </i:EventTrigger>

        <!--WindowのCloseキャンセル処理に対応する場合は、WindowCloseCancelBehaviorの使用を検討してください-->

    </i:Interaction.Triggers>

    <Grid>
        <TextBlock Text="Authorization" FontSize="20" Margin="5,5,0,0" />
        <TextBlock Text="表示されたページにてアクセスを認証し、PINコードを入力してください。" FontSize="15" Margin="15,35" TextWrapping="WrapWithOverflow" />
        <Line X1="10" X2="530" Y1="80" Y2="80" Stroke="Black" StrokeThickness="0.10"/>
        <TextBlock Text="PINコード" FontSize="14" Margin="30,90,0,0" />
        <TextBox Text="{Binding PinCode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" FontSize="13" Height="22" Width="220" 
                 Margin="120,89,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" />

        <Button Content="認証" Command="{Binding AuthCommand}" Height="25" Width="80" IsEnabled="{Binding IsEnabledAuthButton}"
                Margin="0,0,10,10" HorizontalAlignment="Right" VerticalAlignment="Bottom" />
    </Grid>
</Window>
